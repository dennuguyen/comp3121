local utilitydata = { }

utilitydata.comment={
 ["version"]=0x1.547ae147ae148p+0,
}

if not utilitydata.job then utilitydata.job = { } end
if not utilitydata.job.variables then utilitydata.job.variables = { } end

utilitydata.job.variables.checksums={
}

if not utilitydata.job then utilitydata.job = { } end
if not utilitydata.job.variables then utilitydata.job.variables = { } end

utilitydata.job.variables.collected={
 ["macros"]={},
 ["randomseed"]=0x1.2d5a507fa05fbp-1,
 ["sectionblockorder"]={},
}

if not utilitydata.job then utilitydata.job = { } end
if not utilitydata.job.structure then utilitydata.job.structure = { } end

utilitydata.job.structure.collected={
 ["branches"]={},
 ["name"]="",
 ["type"]="text",
}

if not utilitydata.job then utilitydata.job = { } end
if not utilitydata.job.positions then utilitydata.job.positions = { } end

utilitydata.job.positions.collected={
 ["shared"]={
  ["x_h_d"]={},
  ["x_h_d_hs"]={},
  ["x_y_w_h"]={},
  ["y_w_h_d"]={},
 },
 ["user"]={},
}

if not utilitydata.job then utilitydata.job = { } end
if not utilitydata.job.passes then utilitydata.job.passes = { } end

utilitydata.job.passes.collected={
 ["itemgroup:itemize:1"]={
  { 4, 0 },
 },
 ["itemgroup:itemize:10"]={
  { 6, 0 },
 },
 ["itemgroup:itemize:11"]={
  { 2, 0 },
 },
 ["itemgroup:itemize:12"]={
  { 2, 0 },
 },
 ["itemgroup:itemize:13"]={
  { 3, 0 },
 },
 ["itemgroup:itemize:2"]={
  { 4, 0 },
 },
 ["itemgroup:itemize:3"]={
  { 4, 0 },
 },
 ["itemgroup:itemize:4"]={
  { 6, 0 },
 },
 ["itemgroup:itemize:5"]={
  { 6, 0 },
 },
 ["itemgroup:itemize:6"]={
  { 7, 0 },
 },
 ["itemgroup:itemize:7"]={
  { 8, 0 },
 },
 ["itemgroup:itemize:8"]={
  { 3, 0 },
 },
 ["itemgroup:itemize:9"]={
  { 4, 0 },
 },
}

if not utilitydata.job then utilitydata.job = { } end
if not utilitydata.job.datasets then utilitydata.job.datasets = { } end

utilitydata.job.datasets.collected={
}

if not utilitydata.job then utilitydata.job = { } end
if not utilitydata.job.pagestates then utilitydata.job.pagestates = { } end

utilitydata.job.pagestates.collected={
}

if not utilitydata.structures then utilitydata.structures = { } end
if not utilitydata.structures.specials then utilitydata.structures.specials = { } end

utilitydata.structures.specials.collected={
}

if not utilitydata.structures then utilitydata.structures = { } end
if not utilitydata.structures.sections then utilitydata.structures.sections = { } end

utilitydata.structures.sections.collected={
}

if not utilitydata.structures then utilitydata.structures = { } end
if not utilitydata.structures.counters then utilitydata.structures.counters = { } end

utilitydata.structures.counters.collected={
 ["chemical"]={
  { 0 },
 },
 ["combination"]={
  { 0 },
 },
 ["endnote"]={
  { 0 },
 },
 ["figure"]={
  { 0 },
 },
 ["footnote"]={
  { 0 },
 },
 ["formula"]={
  { 0 },
 },
 ["graphic"]={
  { 0 },
 },
 ["intermezzo"]={
  { 0 },
 },
 ["itemgroup:itemize"]={
  { 0, 4, 4, 4, 6, 6, 7, 8, 3, 4, 6, 2, 2, 3 },
 },
 ["itemgroup:itemize:note"]={
  { 0 },
 },
 ["linenote"]={
  { 0 },
 },
 ["paragraph"]={
  { 0 },
 },
 ["realpage"]={
  { 7 },
 },
 ["subpage"]={
  { 7 },
 },
 ["table"]={
  { 0 },
 },
 ["textnote:note"]={
  { 0 },
 },
 ["userpage"]={
  { 7 },
 },
}

if not utilitydata.structures then utilitydata.structures = { } end
if not utilitydata.structures.lists then utilitydata.structures.lists = { } end

utilitydata.structures.lists.collected={
 {
  ["metadata"]=1,
  ["numberdata"]=3,
  ["references"]={
   ["block"]="bodypart",
   ["internal"]=1,
   ["realpage"]=1,
   ["section"]=0,
  },
  ["titledata"]={
   ["label"]="section",
   ["title"]="Asymptotic Notation",
  },
 },
 {
  ["metadata"]=1,
  ["numberdata"]=3,
  ["references"]={
   ["block"]="bodypart",
   ["internal"]=2,
   ["realpage"]=1,
   ["section"]=0,
  },
  ["titledata"]={
   ["label"]="section",
   ["title"]="Recurrence",
  },
 },
 {
  ["metadata"]=4,
  ["numberdata"]=6,
  ["references"]={
   ["block"]="bodypart",
   ["internal"]=3,
   ["realpage"]=2,
   ["section"]=0,
  },
  ["titledata"]={
   ["label"]="subsection",
   ["title"]="Master Theorem",
  },
 },
 {
  ["metadata"]=1,
  ["numberdata"]=3,
  ["references"]={
   ["block"]="bodypart",
   ["internal"]=4,
   ["realpage"]=2,
   ["section"]=0,
  },
  ["titledata"]={
   ["label"]="section",
   ["title"]="Fast Fourier Transform",
  },
 },
 {
  ["metadata"]=1,
  ["numberdata"]=3,
  ["references"]={
   ["block"]="bodypart",
   ["internal"]=5,
   ["realpage"]=3,
   ["section"]=0,
  },
  ["titledata"]={
   ["label"]="section",
   ["title"]="Greedy Algorithm",
  },
 },
 {
  ["metadata"]=4,
  ["numberdata"]=6,
  ["references"]={
   ["block"]="bodypart",
   ["internal"]=6,
   ["realpage"]=3,
   ["section"]=0,
  },
  ["titledata"]={
   ["label"]="subsection",
   ["title"]="Greedy Stays Ahead",
  },
 },
 {
  ["metadata"]=4,
  ["numberdata"]=6,
  ["references"]={
   ["block"]="bodypart",
   ["internal"]=7,
   ["realpage"]=3,
   ["section"]=0,
  },
  ["titledata"]={
   ["label"]="subsection",
   ["title"]="Exchange Argument",
  },
 },
 {
  ["metadata"]=1,
  ["numberdata"]=3,
  ["references"]={
   ["block"]="bodypart",
   ["internal"]=8,
   ["realpage"]=4,
   ["section"]=0,
  },
  ["titledata"]={
   ["label"]="section",
   ["title"]="Kruskal's Algorithm",
  },
 },
 {
  ["metadata"]=1,
  ["numberdata"]=3,
  ["references"]={
   ["block"]="bodypart",
   ["internal"]=9,
   ["realpage"]=4,
   ["section"]=0,
  },
  ["titledata"]={
   ["label"]="section",
   ["title"]="Dynamic Programming",
  },
 },
 {
  ["metadata"]=1,
  ["numberdata"]=3,
  ["references"]={
   ["block"]="bodypart",
   ["internal"]=10,
   ["realpage"]=4,
   ["section"]=0,
  },
  ["titledata"]={
   ["label"]="section",
   ["title"]="Max Flow",
  },
 },
 {
  ["metadata"]=4,
  ["numberdata"]=6,
  ["references"]={
   ["block"]="bodypart",
   ["internal"]=11,
   ["realpage"]=4,
   ["section"]=0,
  },
  ["titledata"]={
   ["label"]="subsection",
   ["title"]="Flow Network Construction",
  },
 },
 {
  ["metadata"]=4,
  ["numberdata"]=6,
  ["references"]={
   ["block"]="bodypart",
   ["internal"]=12,
   ["realpage"]=5,
   ["section"]=0,
  },
  ["titledata"]={
   ["label"]="subsection",
   ["title"]="Max Flow Min Cut",
  },
 },
 {
  ["metadata"]=4,
  ["numberdata"]=6,
  ["references"]={
   ["block"]="bodypart",
   ["internal"]=13,
   ["realpage"]=5,
   ["section"]=0,
  },
  ["titledata"]={
   ["label"]="subsection",
   ["title"]="Max Bipartite Matching",
  },
 },
 {
  ["metadata"]=1,
  ["numberdata"]=3,
  ["references"]={
   ["block"]="bodypart",
   ["internal"]=14,
   ["realpage"]=5,
   ["section"]=0,
  },
  ["titledata"]={
   ["label"]="section",
   ["title"]="String Matching",
  },
 },
 {
  ["metadata"]=4,
  ["numberdata"]=6,
  ["references"]={
   ["block"]="bodypart",
   ["internal"]=15,
   ["realpage"]=6,
   ["section"]=0,
  },
  ["titledata"]={
   ["label"]="subsection",
   ["title"]="Rabin-Karp Algorithm",
  },
 },
 {
  ["metadata"]=4,
  ["numberdata"]=6,
  ["references"]={
   ["block"]="bodypart",
   ["internal"]=16,
   ["realpage"]=6,
   ["section"]=0,
  },
  ["titledata"]={
   ["label"]="subsection",
   ["title"]="Finite Automata",
  },
 },
 {
  ["metadata"]=4,
  ["numberdata"]=6,
  ["references"]={
   ["block"]="bodypart",
   ["internal"]=17,
   ["realpage"]=6,
   ["section"]=0,
  },
  ["titledata"]={
   ["label"]="subsection",
   ["title"]="Knuth-Morris-Pratt Algorithm",
  },
 },
 {
  ["metadata"]=1,
  ["numberdata"]=3,
  ["references"]={
   ["block"]="bodypart",
   ["internal"]=18,
   ["realpage"]=7,
   ["section"]=0,
  },
  ["titledata"]={
   ["label"]="section",
   ["title"]="Linear Programming",
  },
 },
 {
  ["metadata"]=4,
  ["numberdata"]=6,
  ["references"]={
   ["block"]="bodypart",
   ["internal"]=19,
   ["realpage"]=7,
   ["section"]=0,
  },
  ["titledata"]={
   ["label"]="subsection",
   ["title"]="Weak Duality Theorem",
  },
 },
 {
  ["metadata"]=4,
  ["numberdata"]=6,
  ["references"]={
   ["block"]="bodypart",
   ["internal"]=20,
   ["realpage"]=7,
   ["section"]=0,
  },
  ["titledata"]={
   ["label"]="subsection",
   ["title"]="Integer Linear Programming",
  },
 },
 {
  ["metadata"]=1,
  ["numberdata"]=3,
  ["references"]={
   ["block"]="bodypart",
   ["internal"]=21,
   ["realpage"]=7,
   ["section"]=0,
  },
  ["titledata"]={
   ["label"]="section",
   ["title"]="Intractability",
  },
 },
}

if not utilitydata.structures then utilitydata.structures = { } end
if not utilitydata.structures.pages then utilitydata.structures.pages = { } end

utilitydata.structures.pages.collected={
 {
  ["block"]="bodypart",
  ["number"]=1,
  ["numberdata"]=7,
  ["prefixdata"]=8,
  ["state"]="start",
 },
 {
  ["block"]="bodypart",
  ["number"]=2,
  ["numberdata"]=7,
  ["prefixdata"]=8,
  ["state"]="start",
 },
 {
  ["block"]="bodypart",
  ["number"]=3,
  ["numberdata"]=7,
  ["prefixdata"]=8,
  ["state"]="start",
 },
 {
  ["block"]="bodypart",
  ["number"]=4,
  ["numberdata"]=7,
  ["prefixdata"]=8,
  ["state"]="start",
 },
 {
  ["block"]="bodypart",
  ["number"]=5,
  ["numberdata"]=7,
  ["prefixdata"]=8,
  ["state"]="start",
 },
 {
  ["block"]="bodypart",
  ["number"]=6,
  ["numberdata"]=7,
  ["prefixdata"]=8,
  ["state"]="start",
 },
 {
  ["block"]="bodypart",
  ["number"]=7,
  ["numberdata"]=7,
  ["prefixdata"]=8,
  ["state"]="start",
 },
}

if not utilitydata.structures then utilitydata.structures = { } end
if not utilitydata.structures.references then utilitydata.structures.references = { } end

utilitydata.structures.references.collected={
}

if not utilitydata.structures then utilitydata.structures = { } end
if not utilitydata.structures.references then utilitydata.structures.references = { } end

utilitydata.structures.references.referred={
}

if not utilitydata.job then utilitydata.job = { } end
if not utilitydata.job.parwrappers then utilitydata.job.parwrappers = { } end

utilitydata.job.parwrappers.collected={
}

if not utilitydata.job then utilitydata.job = { } end
if not utilitydata.job.objects then utilitydata.job.objects = { } end

utilitydata.job.objects.collected={
}

if not utilitydata.structures then utilitydata.structures = { } end
if not utilitydata.structures.synonyms then utilitydata.structures.synonyms = { } end

utilitydata.structures.synonyms.collected={
}

if not utilitydata.structures then utilitydata.structures = { } end
if not utilitydata.structures.registers then utilitydata.structures.registers = { } end

utilitydata.structures.registers.collected={
}

if not utilitydata.structures then utilitydata.structures = { } end
if not utilitydata.structures.blocks then utilitydata.structures.blocks = { } end

utilitydata.structures.blocks.collected={
}

if not utilitydata.job then utilitydata.job = { } end
if not utilitydata.job.files then utilitydata.job.files = { } end

utilitydata.job.files.collected={
}

if not utilitydata.publications then utilitydata.publications = { } end

utilitydata.publications.collected={
}

if not utilitydata.job then utilitydata.job = { } end
if not utilitydata.job.fileobjreferences then utilitydata.job.fileobjreferences = { } end

utilitydata.job.fileobjreferences.collected={
}

if not utilitydata.job then utilitydata.job = { } end
if not utilitydata.job.embedded then utilitydata.job.embedded = { } end

utilitydata.job.embedded.collected={
}

utilitydata.job.packed={
 ["index"]={
  {
   ["catcodes"]=9,
   ["coding"]="tex",
   ["kind"]="section",
   ["level"]=3,
   ["name"]="subject",
   ["nolist"]=true,
  },
  { 0, 0, 0 },
  {
   ["block"]="bodypart",
   ["conversionset"]="default",
   ["hidenumber"]=true,
   ["language"]="en",
   ["numbers"]=2,
   ["separatorset"]="default",
   ["set"]="all",
  },
  {
   ["catcodes"]=9,
   ["coding"]="tex",
   ["kind"]="section",
   ["level"]=4,
   ["name"]="subsubject",
   ["nolist"]=true,
  },
  { 0, 0, 0, 0 },
  {
   ["block"]="bodypart",
   ["conversionset"]="default",
   ["hidenumber"]=true,
   ["language"]="en",
   ["numbers"]=5,
   ["separatorset"]="default",
   ["set"]="all",
  },
  {
   ["conversionset"]="pagenumber",
  },
  {
   ["connector"]="–",
   ["prefix"]="no",
   ["set"]="part",
  },
 },
 ["keys"]={
  ["directives"]=true,
  ["metadata"]=true,
  ["numberdata"]=true,
  ["numbers"]=true,
  ["ownnumbers"]=true,
  ["pagedata"]=true,
  ["prefixdata"]=true,
  ["processors"]=true,
  ["sectiondata"]=true,
  ["specification"]=true,
 },
 ["skip"]={
  ["datasets"]=true,
  ["positions"]=true,
  ["userdata"]=true,
 },
 ["version"]=0x1.051eb851eb852p+0,
}

return utilitydata